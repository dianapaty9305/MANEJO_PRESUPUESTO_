@model IEnumerable<TipoCuenta>
@{
    ViewData ["Title"] = "Tipos Cuentas"; 
}
<h1>Tipos de Cuentas</h1>
<h5>El tipo de cuenta se refiere a como podemos agrupar cuentas.
    Ejemplos: Préstamos, tarjetas de crédito, etc.
</h5>
<a asp-action="Crear" class="btn btn-primary mb-3">Crear nuevo</a>
<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reordenable">
        @foreach(var tipoCuenta in Model)
        {
            <tr>
                <td>
                    @* el input me sirve para acceder al id de cada tipo cuenta en cada fila el class="ids" me va a servir
                        para obtener de una manera rápida los ids de cada tipo cuenta*@
                    <input type="hidden" value="@tipoCuenta.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="Editar" asp-route-id="@tipoCuenta.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Borrar" asp-route-id="@tipoCuenta.Id">Borrar</a>
                </td>
                <td>
                    @tipoCuenta.Nombre
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script>
        const urlOrdenar = '@Url.Action("Ordenar")';
        $(function () {
            $("#reordenable").sortable({
                        @* stop significa que cuando terminemos de arrastrar se quiere ejecutar una función que va a actualizar los ordenes*@
                stop: async function (e, ui) {
                    //funcion actualizarOrdenes se debe crear
                    await actualizarOrdenes();
                }
            });

            async function actualizarOrdenes() {
                //se debe crear la función obtenerIdsDeElementos();
                const ids = obtenerIdsDeElementos();
                //se debe crear la función enviarIdsAlBackend(ids)
                await enviarIdsAlBackend(ids);
            }

            function obtenerIdsDeElementos(){
                //map(function()) me permite iterar cada uno de los ids y obtener su valor
                const ids = $(".ids").map(function () {
                    //obteniendo el valor de cada uno de los tipo cuenta, colocando ese valor en un arreglo
                    return $(this).val();
                //.get() para convertirlo en un arreglo
                }).get();
                //se retorna el arreglo
                return ids;
            }

            async function enviarIdsAlBackend(ids) { 
                //Necesito convertir en formato JSON
            var data = JSON.stringify(ids);

                await fetch(urlOrdenar, {
                    //Configurando nuestra petición Http
                    method: 'POST',
                    body: data,
                    headers: {
                        'Content-Type':'application/json'
                    }
                });
            }
        })
    </script>
}